#include <iostream>
using namespace std;

void heapify(int arr[],int n,int i){
  int index = i;
  int leftindex = 2*index;
  int rightindex = 2*index+1;

  int largest = index;
  if(leftindex < n && arr[largest] < arr[leftindex]){
    largest = leftindex;
  }
  if(rightindex < n && arr[largest] < arr[rightindex]){
    largest = rightindex;
  }

  if(largest != index){
    swap(arr[index],arr[largest]);
    index = largest;
    heapify(arr,n,index);
  }
}


void buildheap(int arr[],int n){
  for(int i=n/2;i>0;i--){
    heapify(arr,n,i);
  }
}

void heapsort(int arr[],int n){
  buildheap(arr,n);
  while(n!=1){
    swap(arr[1],arr[n-1]);
    n--;
    heapify(arr,n,1);
  }
}

int main() {
  int arr[] = {-1,12,56,43,6,78,87,5,44,3,23,32};
  int n = 12;

  

  cout<<"Printing arr :"<<endl;
  for(auto i:arr) cout<<i<<" ";
  cout<<endl;

  heapsort(arr,n);
  cout<<"Printing Heap after Calling Heapsort:"<<endl;
  for(auto i:arr) cout<<i<<" ";
  cout<<endl;  



  return 0;
}
